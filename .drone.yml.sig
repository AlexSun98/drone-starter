eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgcnVuLXRlc3RzLXN1aXRlOgogICAgaW1hZ2U6IG1pY2hhbHBvZGVzendhL2RvY2tlci1jb21wb3NlOmxhdGVzdAogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogICAgY29tbWFuZHM6CiAgICAgIC0gLi9iaW4vZHJvbmUtcnVuLXRlc3RzLnNoIGFwaS10ZXN0cwogICAgICAtIC4vYmluL2Ryb25lLXJ1bi10ZXN0cy5zaCB3ZWItdGVzdHMKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbcHVsbF9yZXF1ZXN0XQoKICBwdWJsaXNoLWFwaS1kb2NrZXI6CiAgICBpbWFnZTogcGx1Z2lucy9kb2NrZXI6MS4xMgogICAgdXNlcm5hbWU6ICR7RE9DS0VSX1VTRVJOQU1FfQogICAgcGFzc3dvcmQ6ICR7RE9DS0VSX1BBU1NXT1JEfQogICAgZW1haWw6ICR7RE9DS0VSX0VNQUlMfQogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogICAgcmVwbzogYW5vcnNpY2gvZHMtYXBpCiAgICB0YWdzOgogICAgICAtICIke0RST05FX0JSQU5DSH1fJHtEUk9ORV9DT01NSVR9IgogICAgZG9ja2VyZmlsZTogLi9hcGkvRG9ja2VyZmlsZQogICAgY29udGV4dDogLi9hcGkvCiAgICB3aGVuOgogICAgICBicmFuY2g6IFsibWFzdGVyIiwgInByb2R1Y3Rpb24iXQoKICBwdWJsaXNoLXdlYi1kb2NrZXI6CiAgICBpbWFnZTogcGx1Z2lucy9kb2NrZXI6MS4xMgogICAgdXNlcm5hbWU6ICR7RE9DS0VSX1VTRVJOQU1FfQogICAgcGFzc3dvcmQ6ICR7RE9DS0VSX1BBU1NXT1JEfQogICAgZW1haWw6ICR7RE9DS0VSX0VNQUlMfQogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogICAgcmVwbzogYW5vcnNpY2gvZHMtd2ViCiAgICB0YWdzOgogICAgICAtICIke0RST05FX0JSQU5DSH1fJHtEUk9ORV9DT01NSVR9IgogICAgZG9ja2VyZmlsZTogLi93ZWIvRG9ja2VyZmlsZQogICAgY29udGV4dDogLi93ZWIvCiAgICB3aGVuOgogICAgICBicmFuY2g6IFsibWFzdGVyIiwgInByb2R1Y3Rpb24iXQoKICBwdWJsaXNoLWxhbmRpbmctZG9ja2VyOgogICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyOjEuMTIKICAgIHVzZXJuYW1lOiAke0RPQ0tFUl9VU0VSTkFNRX0KICAgIHBhc3N3b3JkOiAke0RPQ0tFUl9QQVNTV09SRH0KICAgIGVtYWlsOiAke0RPQ0tFUl9FTUFJTH0KICAgIHZvbHVtZXM6CiAgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICAgIHJlcG86IGFub3JzaWNoL2RzLWxhbmRpbmcKICAgIHRhZ3M6CiAgICAgIC0gIiR7RFJPTkVfQlJBTkNIfV8ke0RST05FX0NPTU1JVH0iCiAgICBkb2NrZXJmaWxlOiAuL2xhbmRpbmcvRG9ja2VyZmlsZQogICAgY29udGV4dDogLi9sYW5kaW5nLwogICAgd2hlbjoKICAgICAgYnJhbmNoOiBbIm1hc3RlciIsICJwcm9kdWN0aW9uIl0KCiAgZGVwbG95LXN0YWdpbmc6CiAgICBpbWFnZTogd2lsbGlhbXllaC9hbnNpYmxlOnVidW50dTE2LjA0CiAgICBjb21tYW5kczoKICAgICAgLSBta2RpciAtcCB-Ly5zc2gvCiAgICAgIC0gZWNobyAke1NTSF9LRVl9ID4gfi8uc3NoL2lkX3JzYV9hcHAgJiYgY2htb2QgNjAwIH4vLnNzaC9pZF9yc2FfYXBwCiAgICAgIC0gY2QgLi9kZXBsb3kvYmluICYmIC4vZGVwbG95LXN0YWdpbmctYXBwLnNoIC0tcHJpdmF0ZS1rZXkgfi8uc3NoL2lkX3JzYV9hcHAgLS1leHRyYS12YXJzICJkb2NrZXJfdGFnPSR7RFJPTkVfQlJBTkNIfV8ke0RST05FX0NPTU1JVH0gZG9ja2VyX3JlZ2lzdHJ5X3VzZXJuYW1lPSRET0NLRVJfVVNFUk5BTUUgZG9ja2VyX3JlZ2lzdHJ5X3Bhc3N3b3JkPSRET0NLRVJfUEFTU1dPUkQgZG9ja2VyX3JlZ2lzdHJ5X2VtYWlsPSRET0NLRVJfRU1BSUwiCiAgICB3aGVuOgogICAgICBicmFuY2g6IFsibWFzdGVyIl0KICAgICAgZXZlbnQ6IFtwdXNoXQoKICBzbGFjay1ub3RpZmljYXRpb246CiAgICBpbWFnZTogcGx1Z2lucy9zbGFjawogICAgIyB0aGF0IHdpbGwgc2VuZCBhIHBlcnNvbmFsIG5vdGlmaWNhdGlvbiB0byBvdXIgZHJvbmUtc3RhcnRlciBzbGFjayBjaGFubmVsCiAgICAjIHJlYWQgaGVyZSBob3cgdG8gc2V0dXAgc2xhY2sgd2ViaG9va3MgZm9yIHlvdXIgYWNjb3VudDogaHR0cHM6Ly9hcGkuc2xhY2suY29tL2luY29taW5nLXdlYmhvb2tzCiAgICB3ZWJob29rOiBodHRwczovL2hvb2tzLnNsYWNrLmNvbS9zZXJ2aWNlcy9UMzNLUk5KUkUvQjRCQlFVTUZBL3JlendLalowbExidWNSOTRHZjV2WkIzegogICAgdXNlcm5hbWU6IGRyb25lLXN0YXJ0ZXIKICAgIGljb25fZW1vamk6ICI6cm9ja2V0OiIKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1c2gsIHRhZywgZGVwbG95bWVudCwgcHVsbF9yZXF1ZXN0IF0KICAgICAgc3RhdHVzOiBbIHN1Y2Nlc3MsIGZhaWx1cmUgXQo.lrNm9cehGmOy5OhuU5LL7dCCfC53NxU8pNfSlNYvgYM